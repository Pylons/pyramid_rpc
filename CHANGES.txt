unreleased
==========

- Pyramid version compatibility

  + pyramid_rpc now requires Pyramid >= 1.4. (Version 0.5.3 will run on
    Pyramid >= 1.2, but will not run on Pyramid 1.1.x despite what
    setup.py indicates.)

  + Removed pre-1.4 backwards compatibility for custom predicates.

- Tox configuration

  + Added Tox environments checking against older Pyramid versions.

0.5.3 (2015-05-14)
==================

- XML-RPC, JSON-RPC

  + Fix deprecation warnings on versions of Pyramid >= 1.4 due to the
    usage of custom predicates.

0.5.2 (2013-10-01)
==================

Features
--------

- XML-RPC

  + Add support for ``_depth`` argument to
    :func:`pyramid_rpc.xmlrpc.xmlrpc_method` to allow it to be used from
    within another decorator.

- JSON-RPC

  + Add support for ``_depth`` argument to
    :func:`pyramid_rpc.jsonrpc.jsonrpc_method` to allow it to be used from
    within another decorator.

0.5.1 (2012-11-25)
==================

Bug Fixes
---------

- XML-RPC

  + Fix an issue generating responses containing non-ascii characters.

0.5 (2012-11-08)
================

Features
--------

- JSON-RPC

  + Added support for JSON-RPC requests over HTTP GET. All version 2.0
    parameters are required, but should be embedded in the query string.

  + The ``renderer`` can now be overridden. This will allow
    any renderer to be used to convert a method's results to a
    JSON-encoded string. Pyramid 1.4+ has a very flexible JSON
    renderer that will allow a custom serializer and adapters for
    custom data types (see :class:`pyramid.renderers.JSON` for more).

  + Endpoints support ``default_mapper`` and ``default_renderer`` which
    are propagated to all methods attached to the endpoint. Individual
    methods can override these values if necessary on a case-by-case basis.

- XML-RPC

  + Endpoints support ``default_mapper`` which is propagated to all methods
    attached to the endpoint. Individual methods can override this
    values if necessary on a case-by-case basis.

Backwards Incompatibilities
---------------------------

- JSON-RPC

  + With HTTP GET support added, any existing installation will now allow
    JSON-RPC requests over GET. To disable this, add
    ``request_method='POST'`` to your endpoint.

  + Notification requests (``id == null``) used to return a
    HTTP ``204 No Content`` response. Now they return ``200 OK`` like
    everything else, with an empty response.

0.4.1 (2012-10-27)
==================

Features
--------

- Python 3 compatibility.

  + PyAMF is not Python 3 compatible, only JSON-RPC and XML-RPC are
    supported for now.

- JSON-RPC

  + The ``data`` attribute of :class:`pyramid_rpc.jsonrpc.JsonRpcError` is
    now encoded into the error response.

Backwards Incompatibilities
---------------------------

- JSON-RPC

  + The default exception views are now registered with
    :data:`pyramid.security.NO_PERMISSION_REQUIRED` to ensure they are
    always invoked.

- XML-RPC

  + Removed deprecated xmlrpc_view API.

  + The default exception views are now registered with
    :data:`pyramid.security.NO_PERMISSION_REQUIRED` to ensure they are
    always invoked.

0.3.1 (2011-12-12)
==================

Features
--------

- JSON-RPC

  + Added support for named parameters.

0.3 (2011-08-30)
================

Features
--------

- XML-RPC

  + Deprecated the xmlrpc_view API in favor of a new API that
    supports more features expected from routes and views including
    the ability to set permissions on RPC methods, perform traversal,
    and a default view mapper.

- JSON-RPC

  + Removed the *unreleased* JSON-RPC support that was in master.

  + Added a new API for JSON-RPC that supports more features expected
    from routes and views including the ability to set permissions on
    RPC methods, perform traversal, and a default view mapper.

- Pyramid 1.1+ compatibility.

0.2 (2011-02-26)
================

Features
--------

- AMF support via a PyramidGateway that implements a Pyramid view gateway
  for PyAMF.

0.1 (2010-11-09)
================

Features
--------

- XML-RPC support with xmlrpc_view decorator and xmlrpc_endpoint.
